
# Списки

# 1. Створення списку
numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10] # індексована послідовність елементів
names = ['Sergiy', 'Bob', 'James', 'John', 'Alice', 'Olga', 'Vi', 'Ajgfdsgfs']
soup = ['Hello', 15, None, False, [1, 2, 3], 254.54]

# 2. Робота з індексами
print(names[1])  # отримання елементу по індексу
print(names[1:3])  # зріз (отримуємо підсписок)
names[3] = 'Anna'  # заміна елементу по індексу (недоступно для строк)

# 3. Методи списку
# 3. 1. Розширення та видалення
names.append('Bohdan')   # додає НОВИЙ елемент в КІНЕЦЬ списку
names.insert(1, 'Qwerty')  # вставляє НОВИЙ елемент на вказаний індекс

names.remove('Qwerty')  # видаляє елемент ПО ЗНАЧЕННЮ
# names.remove('Oleh')  # ValueError, бо елементу і так не існує

names.pop(1)  # видаляє елемент ПО ІНДЕКСУ
names.pop()  # якщо нічого не вказувати, видаляє останній

el = names.pop()  # окрім цього, елемент повертається (його можна записати в змінну та використати)
print(f'Видалений елемент: {el}')

# 3.2. Стандартні методи
# names.clear()  # очищає список від всіх елементів (він стає порожнім)
print(names.index('Sergiy'))  # повертає індекс елемента

names_copy = names.copy()  # створює та повертає НОВУ незалежну копію списку

print(names.count('Sergiy'))

# 3. 3. Сортування
nums = [1,
        10,
        3,
        54,
        65,
        12, 65, -3,
        333, 0,
        -134, 52]  # можна і так записувати

nums.sort(reverse=True)  # по замовченню, сортування відбувається за > <
names.sort(key=len)

print(nums)
print(names)

# 4. Ітерація та агрегація
for el in names:  # при ітерації отримуємо кожен елемент списку
    print(f'Ім`я: {el}')

print(len(names))

print(max(nums))
print(min(nums))
print(sum(nums))
'''
Method	Description
append()	Додає елемент у кінець списку
extend()	Додає елементи списків та інші ітеровані об'єкти в кінець списку
insert()	Вставляє елемент за вказаним індексом
remove()	Видаляє вказане значення зі списку
pop()	Повертає та видаляє елемент, присутній за заданим індексом
clear()	Видаляє всі елементи зі списку
index()	Повертає індекс першого збігу елементів
count()	Повертає кількість зазначених елементів у списку
sort()	Сортує список у порядку зростання/спадання
reverse()	Змінює порядок елементів у списку
copy()	Повертає поверхневу копію списку

'''


# 5. Кортежі(tuple) незмінювана послідовність елементів (закритий список)
t1 = (1, 2, 3, 4, 5)
t2 = 1, 2, 3, 4, 5
l1 = [1, 2, 3, 4, 5]

for el in t2:
    print(el)

print(t2[1])

print(list(t2))
print(tuple(l1))

# 6.
# Створити список з 100 випадковими числами
import random

# num = []
#
# for _ in range(100):
#     num.append(random.randint(1, 100))
#
# print(num)

num = [random.randint(1, 100) for _ in range(100)]
num = [n for n in range(1, 101) if n % 2 == 0]
names_upper = [el.upper() for el in names]
names_upper = list(map(str.upper, names))

print(names_upper)
