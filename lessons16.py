'''
pickle у Python — це модуль для серіалізації (перетворення об'єкта на послідовність байтів) та десеріалізації (зворотного перетворення байтів на об'єкт). Він дозволяє зберігати об'єкти Python у файлах або передавати їх по мережі, зберігаючи при цьому їхню структуру. Однак, pickle є небезпечним при роботі з ненадійними даними, оскільки десеріалізація може призвести до виконання довільного коду.
Основні функції
Серіалізація (Pickling): Перетворення об'єкта Python на потік байтів. Це робиться за допомогою функцій на кшталт pickle.dumps() (для серіалізації у рядок байтів) або pickle.dump() (для запису у файл).
Десеріалізація (Unpickling): Відновлення об'єкта з потоку байтів. Це робиться за допомогою функцій pickle.loads() (для відновлення з рядка байтів) або pickle.load() (для читання з файлу).
Переваги
Зручність: Дозволяє легко зберігати та відновлювати складні об'єкти Python, включаючи користувацькі класи, списки, словники тощо.
Збереження зв'язків: Зберігає ієрархію об'єктів та посилання між ними.
Байтове представлення: Результатом є компактний двійковий формат, який зручно зберігати або передавати.
Недоліки
Безпека: pickle не є безпечним для десеріалізації даних з ненадійних джерел. Зловмисник може створити шкідливий файл pickle, який виконає довільний код під час десеріалізації.
Специфічність для Python: Формат pickle специфічний для Python і не може бути використаний для обміну даними з програмами, написаними іншими мовами програмування.

# import pickle
#
# def data(a,b):
#     return a+b
# #
# # data = {
# #     'key1':{1,2,3},
# #     'key2':(4,5,6),
# # }
#
# with open('files\\data.pkl', mode='wb') as f:
#     pickle.dump(data, f)
#
# with open('files\\data.pkl', mode='rb') as f:
#     data = pickle.load(f)
#
#
# print(data(1,2))
'''



