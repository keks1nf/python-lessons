'''
–§—É–Ω–∫—Ü—ñ—è	–î—ñ—è
json.dump(obj, file)	–∑–∞–ø–∏—Å—É—î Python-–æ–±‚Äô—î–∫—Ç —É JSON-—Ñ–∞–π–ª
json.load(file)	—á–∏—Ç–∞—î JSON-—Ñ–∞–π–ª —ñ –ø–æ–≤–µ—Ä—Ç–∞—î Python-–æ–±‚Äô—î–∫—Ç
json.dumps(obj)	–ø–µ—Ä–µ—Ç–≤–æ—Ä—é—î Python-–æ–±‚Äô—î–∫—Ç —É JSON-—Ä—è–¥–æ–∫
json.loads(str)	–ø–µ—Ä–µ—Ç–≤–æ—Ä—é—î JSON-—Ä—è–¥–æ–∫ —É Python-–æ–±‚Äô—î–∫—Ç

–û—Å–Ω–æ–≤–Ω—ñ —Ä–µ–∂–∏–º–∏ —Ä–æ–±–æ—Ç–∏ –∑ —Ñ–∞–π–ª–∞–º–∏
–†–µ–∂–∏–º	–ü–æ–≤–Ω–∞ –Ω–∞–∑–≤–∞	–©–æ —Ä–æ–±–∏—Ç—å
'r'	read	üîπ –í—ñ–¥–∫—Ä–∏–≤–∞—î —Ñ–∞–π–ª –¥–ª—è —á–∏—Ç–∞–Ω–Ω—è. –§–∞–π–ª –º–∞—î –≤–∂–µ —ñ—Å–Ω—É–≤–∞—Ç–∏.
'w'	write	üîπ –í—ñ–¥–∫—Ä–∏–≤–∞—î —Ñ–∞–π–ª –¥–ª—è –∑–∞–ø–∏—Å—É. –Ø–∫—â–æ —Ñ–∞–π–ª —ñ—Å–Ω—É—î ‚Äî —É—Å–µ –≤ –Ω—å–æ–º—É —Å—Ç–∏—Ä–∞—î—Ç—å—Å—è! –Ø–∫—â–æ –Ω–µ —ñ—Å–Ω—É—î ‚Äî —Å—Ç–≤–æ—Ä—é—î—Ç—å—Å—è –Ω–æ–≤–∏–π —Ñ–∞–π–ª.
'a'	append	üîπ –í—ñ–¥–∫—Ä–∏–≤–∞—î —Ñ–∞–π–ª –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è (–Ω–æ–≤–∏–π —Ç–µ–∫—Å—Ç –¥–æ–¥–∞—î—Ç—å—Å—è –≤ –∫—ñ–Ω–µ—Ü—å, –Ω—ñ—á–æ–≥–æ –Ω–µ —Å—Ç–∏—Ä–∞—î—Ç—å—Å—è).
'x'	exclusive creation	üîπ –°—Ç–≤–æ—Ä—é—î –Ω–æ–≤–∏–π —Ñ–∞–π–ª, —è–∫—â–æ —Ç–∞–∫–æ–≥–æ —â–µ –Ω–µ–º–∞—î. –Ø–∫—â–æ —Ñ–∞–π–ª —ñ—Å–Ω—É—î ‚Äî –±—É–¥–µ –ø–æ–º–∏–ª–∫–∞.

–¢–∏–ø–∏ –¥–∞–Ω–∏—Ö —É JSON
JSON –ø—ñ–¥—Ç—Ä–∏–º—É—î –ª–∏—à–µ –∫—ñ–ª—å–∫–∞ –±–∞–∑–æ–≤–∏—Ö —Ç–∏–ø—ñ–≤:

String (—Ä—è–¥–æ–∫):

"Hello World"

Number (—á–∏—Å–ª–æ):

43
Boolean (–ª–æ–≥—ñ—á–Ω–µ –∑–Ω–∞—á–µ–Ω–Ω—è):

true

Null (–ø–æ—Ä–æ–∂–Ω—î –∑–Ω–∞—á–µ–Ω–Ω—è):

null

Array (–º–∞—Å–∏–≤):

[1, 2, "three", false]
Object (–æ–±‚Äô—î–∫—Ç):

{
  "name": "Alex",
  "age": 28,
  "isAdmin": true
}

'''
import json

# python_data = {
#     'name': 10 ,
#     'surname': 'Hello world',
#     'grades': [10,15,20,25],
#     'year': False,
#     'month': None
# }
#
# with open('files\\data.json', 'w') as file:
#     json.dump(python_data, file, indent=4)
#
# with open('files\\data.json', 'r') as file:
#     python_data = json.load(file)
#
# print(python_data)

data = {
    'name': 'Alex',
    'age': 28,
    'isAdmin': True,
    'grades': [10,15,20,25]
}
json_data = json.dumps(data, indent=4)
print(json_data)

python_data = json.loads(json_data)
print(python_data)